


function [ct,a] =quick( a,l,h,ct)
%UNTITLED Summary of this function goes here
%   Detailed explanation goes here

if(l<h)
    %[a pi]=partition(a,l,h);
    %ct=ct+1;
    pivot=a(h);
i=l-1;
j=1;

for j=l:1:h-1
   % ct=ct+1;
   if a(j)<=pivot
    i=i+1;
    ct=ct+1;
    temp=a(i);
    a(i)=a(j);
    a(j)=temp;
    end
end
temp2=a(i+1);
a(i+1)=a(h);
a(h)=temp2;
pi=i+1;
    [ct,a]=quick(a,l,pi-1,ct);
     [ct,a]=quick(a,pi+1,h,ct); 
end
%ct=ct+1;
end


function [ ct ] = insertion( a,n )
%UNTITLED8 Summary of this function goes here
%   Detailed explanation goes here
ct=0;
for i=2:n
    key=a(i);
    j=i-1;ct=ct+1;
    while j>=1 && a(j)>key
        a(j+1)=a(j);
        j=j-1;
        ct=ct+1;
    end
    a(j+1)=key;
end
end



function [ ct ] =mbubbles( a,l )
%UNTITLED2 Summary of this function goes here
%   Detailed explanation goes here
 ct=0;i=1;
for i=1:l-1
    k=0;%ct=ct+1;
    for j=1:l-i
      ct=ct+1;
        if a(j)>a(j+1)
            temp=a(j);
            a(j)=a(j+1);
            a(j+1)=temp;
            k=1;
            ct=ct+1;
        end
        
     end
  if k==0 
      break;
   end
end
end

function [ ct] = selection( a,l)
%UNTITLED4 Summary of this function goes here
%   Detailed explanation goes here
ct=0;
for i=1:l
    min=i;%ct=ct+1;
    for j=i+1:l
       ct=ct+1;
        if a(j)<a(min)
            min=j;
           ct=ct+1;
        end
    end
    temp=a(min);
    a(min)=a(i);
    a(i)=temp;
end
end

4.
function [ct,a] = quick_ins( a,l,h,ct)
%UNTITLED2 Summary of this function goes here
%   Detailed explanation goes here
if l<h && h-l<=12
    %ct=ct+1;
[a,ct]=insertion1(a,h-l+1,ct);
end
if(l<h && h-l>12)
    %[a pi]=partition(a,l,h);
  ct=ct+1;
    pivot=a(h);
i=l-1;
j=1;

for j=l:1:h-1
    %ct=ct+1;
   if a(j)<=pivot
    i=i+1;
    ct=ct+1;
    temp=a(i);
    a(i)=a(j);
    a(j)=temp;
    end
end
temp2=a(i+1);
a(i+1)=a(h);
a(h)=temp2;
pi=i+1;
      [ct,a]=quick(a,l,pi-1,ct);
      [ct,a]=quick(a,pi+1,h,ct); 
end
%ct=ct+1;
end


function [ a,ct] = insertion1( a,n,ct )
%UNTITLED Summary of this function goes here
%   Detailed explanation goes here
for i=2:n
    key=a(i);
    j=i-1;%ct=ct+1;
    while j>=1 && a(j)>key
        a(j+1)=a(j);
        j=j-1;
        ct=ct+1;
    end
    a(j+1)=key;
end

end


4.
i=1;
%b=zeros(100);
%c=zeros(100);
%d=zeros(100);
%e=zeros(100);
for l=1:1000
a=round(rand(1,l)*100);
[b(i),s]=quick(a,1,l,0);
[c(i),s]=quick_ins(a,1,l,0);
d(i)=insertion(a,l);
e(i)=l;
i=i+1;
end
plot(e,b,e,c,e,d);
title('variants of quick sort compared with insertion sort');
xlabel('no. of elements');
legend('Quicksort','modified quick','insertionsort');
ylabel('no.of comparisons');
grid on;
disp('variants of quick sort');
